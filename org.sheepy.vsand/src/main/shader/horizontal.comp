#version 450

#define CHUNK_WIDTH 78
#define CHUNK_HEIGHT 44

#define WORKGROUP_SIZE 16

#include "rand_utils.glsl"
#include "material.glsl"
#include "crop.glsl"
#include "board.glsl"

layout (local_size_x = 1, local_size_y = WORKGROUP_SIZE, local_size_z = 1) in;

void main()
{
    uint y = gl_GlobalInvocationID.y;
    initQueue();

    buildCrops(uvec2(0, y), false);

    int leftIndex = cropQueue.firstIndex;
    int rightIndex = cropQueue.queue[leftIndex].nextCrop;
    bool pushed = false;
    while(rightIndex != -1)
    {
        bool liquidOrGaz = (cropQueue.queue[leftIndex].isLiquid || cropQueue.queue[leftIndex].isGaz)
                            && (cropQueue.queue[rightIndex].isLiquid || cropQueue.queue[rightIndex].isGaz);
        if(liquidOrGaz)
        {
            uint leftDensity = getDensity(leftIndex);
            uint rightDensity = getDensity(rightIndex);
            float leftForce = leftDensity > rightDensity ? 0.1 : 0;
            float rightForce = leftDensity < rightDensity ? 0.1 : 0;
            float leftPressureForce = cropQueue.queue[leftIndex].pressure;
            float rightPressureForce = cropQueue.queue[rightIndex].pressure;
            uint leftSize = cropQueue.queue[leftIndex].size;
            uint rightSize = cropQueue.queue[rightIndex].size;
            float pressureDiff = (rightPressureForce / rightSize) - (leftPressureForce / leftSize);

            if (pushed == false && pressureDiff > 0.0 && leftSize > 2)
            {
                // Right to Left
                float pressureDiffAfterMove = (rightPressureForce / (rightSize+1)) - (leftPressureForce / (leftSize-1));
                if(leftDensity < rightDensity || pressureDiffAfterMove >= 0.)
                {
                    cropQueue.queue[leftIndex].size--;
                    cropQueue.queue[rightIndex].size++;
                    pushed = true;
                }
            }
            else if (pushed == false && pressureDiff < -0.0 && rightSize > 2)
            {
                // Left to Right
                float pressureDiffAfterMove = (rightPressureForce / (rightSize-1)) - (leftPressureForce / (leftSize+1));
                if(rightDensity < leftDensity || pressureDiffAfterMove <= 0.)
                {
                    cropQueue.queue[leftIndex].size++;
                    cropQueue.queue[rightIndex].size--;
                    pushed = true;
                }
            }
            else
            {
                pushed = false;
            }
        }

        leftIndex = rightIndex;
        rightIndex = cropQueue.queue[rightIndex].nextCrop;
    }

    writeCrops(uvec2(0, y), false);
}
