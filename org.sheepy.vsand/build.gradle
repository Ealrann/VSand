import org.gradle.internal.os.OperatingSystem

plugins {
	id 'application'
	id 'distribution'
	id 'org.mini2Dx.butler'
}

switch ( OperatingSystem.current() ) {
	case OperatingSystem.WINDOWS:
		project.ext.OS = "windows"
		break
	case OperatingSystem.LINUX:
		project.ext.OS = "linux"
		break
	case OperatingSystem.MAC_OS:
		project.ext.OS = "macos"
		break
}

task jlink(type: Exec, dependsOn: ['installDist']) {
  def javaHome = System.properties.'java.home'

  workingDir 'build'

  commandLine "$javaHome/bin/jlink",
    '--strip-debug',
    '--no-header-files',
    '--no-man-pages',
    '--exclude-files', '**java_*.properties',
    '--compress', '2',
    '--add-modules', "java.base,java.xml,jdk.unsupported,openj9.sharedclasses",
    '--output', 'image'
}

task cleanJlink(type: Delete) {
  delete 'build/image'
}

task copyReleng(type: Copy) {
	from "releng/$project.ext.OS"
	into 'build/image'
}

task copyModules(type: Copy) {
	from "build/install/org.sheepy.vsand/lib/"
	into 'build/image/modules'
}

tasks.clean.dependsOn(cleanJlink)
tasks.jlink.finalizedBy(copyReleng)
tasks.jlink.finalizedBy(copyModules)


butler {
	user = "ealrann"
	game = "vsand"
	userVersion = project.version

	windows {
		binDirectory = "$projectDir/build/image"
		channel = "windows"
	}
	linux {
		binDirectory = "$projectDir/build/image"
		channel = "linux"
	}
}

mainClassName = 'org.sheepy.vsand/org.sheepy.vsand.VSandApplicationLauncher'

test {
	useJUnitPlatform()
}

dependencies {

	implementation 'org.sheepy.lily.vulkan:org.sheepy.lily.vulkan.base'

	implementation 'org.sheepy.lily.vulkan:org.sheepy.lily.vulkan.extra.api'
	implementation 'org.sheepy.lily.vulkan:org.sheepy.lily.vulkan.extra.nuklear'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.2'

	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

sourceSets {
	main {
		java.srcDirs = ['src/generated/java',
			'src/main/java',
			'src/main/shader']
		resources.srcDirs = ['src/main/resources']
	}
}
