#version 450
#extension GL_ARB_separate_shader_objects : enable

#define WIDTH 800
#define HEIGHT 600
#define WORKGROUP_SIZE 32

#define WHITE vec4(1.0, 1.0, 1.0, 1.0)
#define RED vec4(1.0, 0.0, 0.0, 1.0)
#define BLACK vec4(0.0, 0.0, 0.0, 1.0)

layout (local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = 1) in;

layout(binding = 0) readonly buffer buf1 {
   int boardData[];
} inArray;

layout(rgba8, binding = 1) uniform restrict image2D outImage;

void main() {
  /*
  In order to fit the work into workgroups, some unnecessary threads are launched.
  We terminate those threads here. 
  */
  uint arrayLocation = WIDTH * gl_GlobalInvocationID.y + gl_GlobalInvocationID.x;
  
  vec4 value;

  // store the target color into a storage buffer:
  if(inArray.boardData[arrayLocation] == 1) {
  	value = WHITE;
  }  else { 
    value = BLACK;
  }

  imageStore(outImage, ivec2(gl_GlobalInvocationID.xy), value);
}
