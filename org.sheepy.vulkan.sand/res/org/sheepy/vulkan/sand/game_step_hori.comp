#version 450
#extension GL_ARB_separate_shader_objects : enable

#define WIDTH 1024
#define HEIGHT 576
#define WORKGROUP_SIZE 16

layout (local_size_x = 1, local_size_y = WORKGROUP_SIZE, local_size_z = 1) in;

struct Entry
{
	int isStatic;
	int density;
	int runoff;
	float viscosity;
	float r;
	float g;
	float b;

	// Padding for the alignement
	float padding1;
};

layout(binding = 0) uniform SConfiguration
{
	Entry materials[16];
}configuration;

layout(binding = 1) buffer buf2
{
	int data[WIDTH][HEIGHT];
}board;

void main()
{
	uint y = gl_GlobalInvocationID.y;
	int value1;
	int value2;

	for (int x = -1; x < WIDTH + 1; x++)
	{
		value1 = y > 0 ? board.data[x][y] : 0;
		value2 = y < (HEIGHT - 1) ? board.data[x][y + 1] : 0;

		if (configuration.materials[value1].isStatic == 0
				&& configuration.materials[value2].isStatic == 0
				&& configuration.materials[value1].density
						> configuration.materials[value2].density)
		{
			if (y > 0)
			{
				board.data[x][y] = value2;
			}
			if (y < HEIGHT - 1)
			{
				board.data[x][y + 1] = value1;
			}
			// Don't try to move again the next one.
			y++;
		}
	}
}
