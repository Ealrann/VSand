import org.gradle.internal.os.OperatingSystem

plugins {
	id 'java'
	id 'application'
	id 'distribution'
	id 'org.beryx.jlink' version '2.3.1'
}

jlink {
		moduleName = 'org.sheepy.vulkan.sand'
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher{
        name = 'VSand'
        jvmArgs = ['-Dlog4j.configurationFile=./log4j2.xml']
    }
}

mainClassName = 'org.sheepy.vulkan.sand/org.sheepy.vulkan.sand.VSandApplicationLauncher'
jar {
    manifest {
        attributes 'Implementation-Title': "modular-hello",
                'Main-Class': 'org.sheepy.vulkan.sand.VSandApplicationLauncher'
    }
}

startScripts {
    applicationName = 'VSand'
}

if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
	runClient {
		jvmArgs "-Dorg.lwjgl.vulkan.libname=MoltenVK"
	}
}

dependencies {
	implementation project(':org.sheepy.lily.core.impl')

	implementation project(':org.sheepy.lily.vulkan.api')
	implementation project(':org.sheepy.lily.vulkan.process.compute')
	implementation project(':org.sheepy.lily.vulkan.process.graphic')

	implementation project(':org.sheepy.vulkan.nuklear')
}

switch ( OperatingSystem.current() ) {
	case OperatingSystem.WINDOWS:
		project.ext.OS = "windows"
		break
	case OperatingSystem.LINUX:
		project.ext.OS = "linux"
		break
	case OperatingSystem.MAC_OS:
		project.ext.OS = "macos"
		break
}

distributions {
	main {
		baseName = "VSand_$OS"
	}
}

sourceSets {
	main {
		java.srcDirs = ['src/generated/java',
			'src/main/java']
		resources.srcDirs = ['src/main/resources']
	}
}
